#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SED_real
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SED")]
	public partial class DataSedDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertBase_document(Base_document instance);
    partial void UpdateBase_document(Base_document instance);
    partial void DeleteBase_document(Base_document instance);
    partial void InsertDocumentKind(DocumentKind instance);
    partial void UpdateDocumentKind(DocumentKind instance);
    partial void DeleteDocumentKind(DocumentKind instance);
    partial void InsertAddressee(Addressee instance);
    partial void UpdateAddressee(Addressee instance);
    partial void DeleteAddressee(Addressee instance);
    partial void InsertCameFrom(CameFrom instance);
    partial void UpdateCameFrom(CameFrom instance);
    partial void DeleteCameFrom(CameFrom instance);
    partial void InsertCounterparty(Counterparty instance);
    partial void UpdateCounterparty(Counterparty instance);
    partial void DeleteCounterparty(Counterparty instance);
    partial void InsertDeliveryMethod(DeliveryMethod instance);
    partial void UpdateDeliveryMethod(DeliveryMethod instance);
    partial void DeleteDeliveryMethod(DeliveryMethod instance);
    partial void InsertIncoming_Document(Incoming_Document instance);
    partial void UpdateIncoming_Document(Incoming_Document instance);
    partial void DeleteIncoming_Document(Incoming_Document instance);
    #endregion
		
		public DataSedDataContext() : 
				base(global::SED_real.Properties.Settings.Default.SEDConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataSedDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataSedDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataSedDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataSedDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Base_document> Base_document
		{
			get
			{
				return this.GetTable<Base_document>();
			}
		}
		
		public System.Data.Linq.Table<DocumentKind> DocumentKind
		{
			get
			{
				return this.GetTable<DocumentKind>();
			}
		}
		
		public System.Data.Linq.Table<Addressee> Addressee
		{
			get
			{
				return this.GetTable<Addressee>();
			}
		}
		
		public System.Data.Linq.Table<CameFrom> CameFrom
		{
			get
			{
				return this.GetTable<CameFrom>();
			}
		}
		
		public System.Data.Linq.Table<Counterparty> Counterparty
		{
			get
			{
				return this.GetTable<Counterparty>();
			}
		}
		
		public System.Data.Linq.Table<DeliveryMethod> DeliveryMethod
		{
			get
			{
				return this.GetTable<DeliveryMethod>();
			}
		}
		
		public System.Data.Linq.Table<Incoming_Document> Incoming_Document
		{
			get
			{
				return this.GetTable<Incoming_Document>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_document")]
	public partial class Base_document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _DocumentKind;
		
		private string _Subject;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _DocumentNumber;
		
		private EntityRef<DocumentKind> _DocumentKind1;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDocumentKindChanging(int value);
    partial void OnDocumentKindChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnDocumentNumberChanging(string value);
    partial void OnDocumentNumberChanged();
    #endregion
		
		public Base_document()
		{
			this._DocumentKind1 = default(EntityRef<DocumentKind>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentKind", DbType="Int NOT NULL")]
		public int DocumentKind
		{
			get
			{
				return this._DocumentKind;
			}
			set
			{
				if ((this._DocumentKind != value))
				{
					if (this._DocumentKind1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentKindChanging(value);
					this.SendPropertyChanging();
					this._DocumentKind = value;
					this.SendPropertyChanged("DocumentKind");
					this.OnDocumentKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(255)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this.OnDocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._DocumentNumber = value;
					this.SendPropertyChanged("DocumentNumber");
					this.OnDocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentKind_Base_document", Storage="_DocumentKind1", ThisKey="DocumentKind", OtherKey="ID", IsForeignKey=true)]
		public DocumentKind DocumentKind1
		{
			get
			{
				return this._DocumentKind1.Entity;
			}
			set
			{
				DocumentKind previousValue = this._DocumentKind1.Entity;
				if (((previousValue != value) 
							|| (this._DocumentKind1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentKind1.Entity = null;
						previousValue.Base_document.Remove(this);
					}
					this._DocumentKind1.Entity = value;
					if ((value != null))
					{
						value.Base_document.Add(this);
						this._DocumentKind = value.ID;
					}
					else
					{
						this._DocumentKind = default(int);
					}
					this.SendPropertyChanged("DocumentKind1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentKind")]
	public partial class DocumentKind : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _GUID;
		
		private string _Name_DocumentKind;
		
		private EntitySet<Base_document> _Base_document;
		
		private EntitySet<Incoming_Document> _Incoming_Document;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnGUIDChanged();
    partial void OnName_DocumentKindChanging(string value);
    partial void OnName_DocumentKindChanged();
    #endregion
		
		public DocumentKind()
		{
			this._Base_document = new EntitySet<Base_document>(new Action<Base_document>(this.attach_Base_document), new Action<Base_document>(this.detach_Base_document));
			this._Incoming_Document = new EntitySet<Incoming_Document>(new Action<Incoming_Document>(this.attach_Incoming_Document), new Action<Incoming_Document>(this.detach_Incoming_Document));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this.OnGUIDChanging(value);
					this.SendPropertyChanging();
					this._GUID = value;
					this.SendPropertyChanged("GUID");
					this.OnGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_DocumentKind", DbType="NVarChar(255)")]
		public string Name_DocumentKind
		{
			get
			{
				return this._Name_DocumentKind;
			}
			set
			{
				if ((this._Name_DocumentKind != value))
				{
					this.OnName_DocumentKindChanging(value);
					this.SendPropertyChanging();
					this._Name_DocumentKind = value;
					this.SendPropertyChanged("Name_DocumentKind");
					this.OnName_DocumentKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentKind_Base_document", Storage="_Base_document", ThisKey="ID", OtherKey="DocumentKind")]
		public EntitySet<Base_document> Base_document
		{
			get
			{
				return this._Base_document;
			}
			set
			{
				this._Base_document.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentKind_Incoming_Document", Storage="_Incoming_Document", ThisKey="ID", OtherKey="DocumentKind")]
		public EntitySet<Incoming_Document> Incoming_Document
		{
			get
			{
				return this._Incoming_Document;
			}
			set
			{
				this._Incoming_Document.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Base_document(Base_document entity)
		{
			this.SendPropertyChanging();
			entity.DocumentKind1 = this;
		}
		
		private void detach_Base_document(Base_document entity)
		{
			this.SendPropertyChanging();
			entity.DocumentKind1 = null;
		}
		
		private void attach_Incoming_Document(Incoming_Document entity)
		{
			this.SendPropertyChanging();
			entity.DocumentKind1 = this;
		}
		
		private void detach_Incoming_Document(Incoming_Document entity)
		{
			this.SendPropertyChanging();
			entity.DocumentKind1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Addressee")]
	public partial class Addressee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FIO_Addressee;
		
		private EntitySet<Incoming_Document> _Incoming_Document;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFIO_AddresseeChanging(string value);
    partial void OnFIO_AddresseeChanged();
    #endregion
		
		public Addressee()
		{
			this._Incoming_Document = new EntitySet<Incoming_Document>(new Action<Incoming_Document>(this.attach_Incoming_Document), new Action<Incoming_Document>(this.detach_Incoming_Document));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIO_Addressee", DbType="VarChar(255)")]
		public string FIO_Addressee
		{
			get
			{
				return this._FIO_Addressee;
			}
			set
			{
				if ((this._FIO_Addressee != value))
				{
					this.OnFIO_AddresseeChanging(value);
					this.SendPropertyChanging();
					this._FIO_Addressee = value;
					this.SendPropertyChanged("FIO_Addressee");
					this.OnFIO_AddresseeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Addressee_Incoming_Document", Storage="_Incoming_Document", ThisKey="ID", OtherKey="Addressee")]
		public EntitySet<Incoming_Document> Incoming_Document
		{
			get
			{
				return this._Incoming_Document;
			}
			set
			{
				this._Incoming_Document.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Incoming_Document(Incoming_Document entity)
		{
			this.SendPropertyChanging();
			entity.Addressee1 = this;
		}
		
		private void detach_Incoming_Document(Incoming_Document entity)
		{
			this.SendPropertyChanging();
			entity.Addressee1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CameFrom")]
	public partial class CameFrom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name_CameFrom;
		
		private EntitySet<Incoming_Document> _Incoming_Document;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnName_CameFromChanging(string value);
    partial void OnName_CameFromChanged();
    #endregion
		
		public CameFrom()
		{
			this._Incoming_Document = new EntitySet<Incoming_Document>(new Action<Incoming_Document>(this.attach_Incoming_Document), new Action<Incoming_Document>(this.detach_Incoming_Document));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_CameFrom", DbType="NVarChar(255)")]
		public string Name_CameFrom
		{
			get
			{
				return this._Name_CameFrom;
			}
			set
			{
				if ((this._Name_CameFrom != value))
				{
					this.OnName_CameFromChanging(value);
					this.SendPropertyChanging();
					this._Name_CameFrom = value;
					this.SendPropertyChanged("Name_CameFrom");
					this.OnName_CameFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CameFrom_Incoming_Document", Storage="_Incoming_Document", ThisKey="ID", OtherKey="CameFrom")]
		public EntitySet<Incoming_Document> Incoming_Document
		{
			get
			{
				return this._Incoming_Document;
			}
			set
			{
				this._Incoming_Document.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Incoming_Document(Incoming_Document entity)
		{
			this.SendPropertyChanging();
			entity.CameFrom1 = this;
		}
		
		private void detach_Incoming_Document(Incoming_Document entity)
		{
			this.SendPropertyChanging();
			entity.CameFrom1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Counterparty")]
	public partial class Counterparty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name_Counterparty;
		
		private EntitySet<Incoming_Document> _Incoming_Document;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnName_CounterpartyChanging(string value);
    partial void OnName_CounterpartyChanged();
    #endregion
		
		public Counterparty()
		{
			this._Incoming_Document = new EntitySet<Incoming_Document>(new Action<Incoming_Document>(this.attach_Incoming_Document), new Action<Incoming_Document>(this.detach_Incoming_Document));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Counterparty", DbType="NVarChar(255)")]
		public string Name_Counterparty
		{
			get
			{
				return this._Name_Counterparty;
			}
			set
			{
				if ((this._Name_Counterparty != value))
				{
					this.OnName_CounterpartyChanging(value);
					this.SendPropertyChanging();
					this._Name_Counterparty = value;
					this.SendPropertyChanged("Name_Counterparty");
					this.OnName_CounterpartyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Counterparty_Incoming_Document", Storage="_Incoming_Document", ThisKey="ID", OtherKey="Counterparty")]
		public EntitySet<Incoming_Document> Incoming_Document
		{
			get
			{
				return this._Incoming_Document;
			}
			set
			{
				this._Incoming_Document.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Incoming_Document(Incoming_Document entity)
		{
			this.SendPropertyChanging();
			entity.Counterparty1 = this;
		}
		
		private void detach_Incoming_Document(Incoming_Document entity)
		{
			this.SendPropertyChanging();
			entity.Counterparty1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeliveryMethod")]
	public partial class DeliveryMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name_DeliveryMethod;
		
		private EntitySet<Incoming_Document> _Incoming_Document;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnName_DeliveryMethodChanging(string value);
    partial void OnName_DeliveryMethodChanged();
    #endregion
		
		public DeliveryMethod()
		{
			this._Incoming_Document = new EntitySet<Incoming_Document>(new Action<Incoming_Document>(this.attach_Incoming_Document), new Action<Incoming_Document>(this.detach_Incoming_Document));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_DeliveryMethod", DbType="NVarChar(255)")]
		public string Name_DeliveryMethod
		{
			get
			{
				return this._Name_DeliveryMethod;
			}
			set
			{
				if ((this._Name_DeliveryMethod != value))
				{
					this.OnName_DeliveryMethodChanging(value);
					this.SendPropertyChanging();
					this._Name_DeliveryMethod = value;
					this.SendPropertyChanged("Name_DeliveryMethod");
					this.OnName_DeliveryMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeliveryMethod_Incoming_Document", Storage="_Incoming_Document", ThisKey="ID", OtherKey="DeliveryMethod")]
		public EntitySet<Incoming_Document> Incoming_Document
		{
			get
			{
				return this._Incoming_Document;
			}
			set
			{
				this._Incoming_Document.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Incoming_Document(Incoming_Document entity)
		{
			this.SendPropertyChanging();
			entity.DeliveryMethod1 = this;
		}
		
		private void detach_Incoming_Document(Incoming_Document entity)
		{
			this.SendPropertyChanging();
			entity.DeliveryMethod1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Incoming_Document")]
	public partial class Incoming_Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _DocumentKind;
		
		private string _Subject;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _DocumentNumber;
		
		private int _Addressee;
		
		private int _Counterparty;
		
		private int _DeliveryMethod;
		
		private int _CameFrom;
		
		private EntityRef<Addressee> _Addressee1;
		
		private EntityRef<CameFrom> _CameFrom1;
		
		private EntityRef<Counterparty> _Counterparty1;
		
		private EntityRef<DeliveryMethod> _DeliveryMethod1;
		
		private EntityRef<DocumentKind> _DocumentKind1;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDocumentKindChanging(int value);
    partial void OnDocumentKindChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnDocumentNumberChanging(string value);
    partial void OnDocumentNumberChanged();
    partial void OnAddresseeChanging(int value);
    partial void OnAddresseeChanged();
    partial void OnCounterpartyChanging(int value);
    partial void OnCounterpartyChanged();
    partial void OnDeliveryMethodChanging(int value);
    partial void OnDeliveryMethodChanged();
    partial void OnCameFromChanging(int value);
    partial void OnCameFromChanged();
    #endregion
		
		public Incoming_Document()
		{
			this._Addressee1 = default(EntityRef<Addressee>);
			this._CameFrom1 = default(EntityRef<CameFrom>);
			this._Counterparty1 = default(EntityRef<Counterparty>);
			this._DeliveryMethod1 = default(EntityRef<DeliveryMethod>);
			this._DocumentKind1 = default(EntityRef<DocumentKind>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentKind", DbType="Int NOT NULL")]
		public int DocumentKind
		{
			get
			{
				return this._DocumentKind;
			}
			set
			{
				if ((this._DocumentKind != value))
				{
					if (this._DocumentKind1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentKindChanging(value);
					this.SendPropertyChanging();
					this._DocumentKind = value;
					this.SendPropertyChanged("DocumentKind");
					this.OnDocumentKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(255)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this.OnDocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._DocumentNumber = value;
					this.SendPropertyChanged("DocumentNumber");
					this.OnDocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addressee", DbType="Int NOT NULL")]
		public int Addressee
		{
			get
			{
				return this._Addressee;
			}
			set
			{
				if ((this._Addressee != value))
				{
					if (this._Addressee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddresseeChanging(value);
					this.SendPropertyChanging();
					this._Addressee = value;
					this.SendPropertyChanged("Addressee");
					this.OnAddresseeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Counterparty", DbType="Int NOT NULL")]
		public int Counterparty
		{
			get
			{
				return this._Counterparty;
			}
			set
			{
				if ((this._Counterparty != value))
				{
					if (this._Counterparty1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCounterpartyChanging(value);
					this.SendPropertyChanging();
					this._Counterparty = value;
					this.SendPropertyChanged("Counterparty");
					this.OnCounterpartyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryMethod", DbType="Int NOT NULL")]
		public int DeliveryMethod
		{
			get
			{
				return this._DeliveryMethod;
			}
			set
			{
				if ((this._DeliveryMethod != value))
				{
					if (this._DeliveryMethod1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryMethodChanging(value);
					this.SendPropertyChanging();
					this._DeliveryMethod = value;
					this.SendPropertyChanged("DeliveryMethod");
					this.OnDeliveryMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CameFrom", DbType="Int NOT NULL")]
		public int CameFrom
		{
			get
			{
				return this._CameFrom;
			}
			set
			{
				if ((this._CameFrom != value))
				{
					if (this._CameFrom1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCameFromChanging(value);
					this.SendPropertyChanging();
					this._CameFrom = value;
					this.SendPropertyChanged("CameFrom");
					this.OnCameFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Addressee_Incoming_Document", Storage="_Addressee1", ThisKey="Addressee", OtherKey="ID", IsForeignKey=true)]
		public Addressee Addressee1
		{
			get
			{
				return this._Addressee1.Entity;
			}
			set
			{
				Addressee previousValue = this._Addressee1.Entity;
				if (((previousValue != value) 
							|| (this._Addressee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Addressee1.Entity = null;
						previousValue.Incoming_Document.Remove(this);
					}
					this._Addressee1.Entity = value;
					if ((value != null))
					{
						value.Incoming_Document.Add(this);
						this._Addressee = value.ID;
					}
					else
					{
						this._Addressee = default(int);
					}
					this.SendPropertyChanged("Addressee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CameFrom_Incoming_Document", Storage="_CameFrom1", ThisKey="CameFrom", OtherKey="ID", IsForeignKey=true)]
		public CameFrom CameFrom1
		{
			get
			{
				return this._CameFrom1.Entity;
			}
			set
			{
				CameFrom previousValue = this._CameFrom1.Entity;
				if (((previousValue != value) 
							|| (this._CameFrom1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CameFrom1.Entity = null;
						previousValue.Incoming_Document.Remove(this);
					}
					this._CameFrom1.Entity = value;
					if ((value != null))
					{
						value.Incoming_Document.Add(this);
						this._CameFrom = value.ID;
					}
					else
					{
						this._CameFrom = default(int);
					}
					this.SendPropertyChanged("CameFrom1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Counterparty_Incoming_Document", Storage="_Counterparty1", ThisKey="Counterparty", OtherKey="ID", IsForeignKey=true)]
		public Counterparty Counterparty1
		{
			get
			{
				return this._Counterparty1.Entity;
			}
			set
			{
				Counterparty previousValue = this._Counterparty1.Entity;
				if (((previousValue != value) 
							|| (this._Counterparty1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Counterparty1.Entity = null;
						previousValue.Incoming_Document.Remove(this);
					}
					this._Counterparty1.Entity = value;
					if ((value != null))
					{
						value.Incoming_Document.Add(this);
						this._Counterparty = value.ID;
					}
					else
					{
						this._Counterparty = default(int);
					}
					this.SendPropertyChanged("Counterparty1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeliveryMethod_Incoming_Document", Storage="_DeliveryMethod1", ThisKey="DeliveryMethod", OtherKey="ID", IsForeignKey=true)]
		public DeliveryMethod DeliveryMethod1
		{
			get
			{
				return this._DeliveryMethod1.Entity;
			}
			set
			{
				DeliveryMethod previousValue = this._DeliveryMethod1.Entity;
				if (((previousValue != value) 
							|| (this._DeliveryMethod1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeliveryMethod1.Entity = null;
						previousValue.Incoming_Document.Remove(this);
					}
					this._DeliveryMethod1.Entity = value;
					if ((value != null))
					{
						value.Incoming_Document.Add(this);
						this._DeliveryMethod = value.ID;
					}
					else
					{
						this._DeliveryMethod = default(int);
					}
					this.SendPropertyChanged("DeliveryMethod1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentKind_Incoming_Document", Storage="_DocumentKind1", ThisKey="DocumentKind", OtherKey="ID", IsForeignKey=true)]
		public DocumentKind DocumentKind1
		{
			get
			{
				return this._DocumentKind1.Entity;
			}
			set
			{
				DocumentKind previousValue = this._DocumentKind1.Entity;
				if (((previousValue != value) 
							|| (this._DocumentKind1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentKind1.Entity = null;
						previousValue.Incoming_Document.Remove(this);
					}
					this._DocumentKind1.Entity = value;
					if ((value != null))
					{
						value.Incoming_Document.Add(this);
						this._DocumentKind = value.ID;
					}
					else
					{
						this._DocumentKind = default(int);
					}
					this.SendPropertyChanged("DocumentKind1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
